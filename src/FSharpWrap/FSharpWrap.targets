<Project>

  <UsingTask
    TaskName="FSharpWrapFormatCliArguments"
    TaskFactory="RoslynCodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <CliArguments ParameterType="System.String" Output="true" />
      <ToolPath ParameterType="System.String" Required="true" />
      <AssemblyPaths ParameterType="System.String[]" Required="true" />
      <OutputFilePath ParameterType="System.String" Required="true" />

      <!-- Filters -->
      <ExcludeAssemblyFiles ParameterType="System.String[]" />
      <IncludeAssemblyFiles ParameterType="System.String[]" />

      <LaunchDebugger ParameterType="System.Boolean" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.Collections.Generic" />
      <Using Namespace="System.Text" />
      <Code Type="Fragment" Language="C#">
        <![CDATA[
        var args = new List<string>(4);
        args.Add(ToolPath);
        args.AddRange(AssemblyPaths);
        args.Add("--output-file");
        args.Add(OutputFilePath);

        if (ExcludeAssemblyFiles?.Length > 0)
        {
            args.Add("--exclude-assembly-files");
            args.AddRange(ExcludeAssemblyFiles);
        }

        if (IncludeAssemblyFiles?.Length > 0)
        {
            args.Add("--include-assembly-files");
            args.AddRange(IncludeAssemblyFiles);
        }

        if (LaunchDebugger) args.Add("--launch-debugger");

        CliArguments = String.Join(" ", args.ConvertAll(arg => $"\"{arg}\""));
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <!-- FSharpWrap Settings -->
  <PropertyGroup>
    <FSharpWrapOutputFileName Condition="'$(FSharpWrapOutputFileName)'==''">output.autogen.fs</FSharpWrapOutputFileName>
    <FSharpWrapOutputFilePath Condition="'$(FSharpWrapOutputFilePath)'==''">$(MSBuildProjectDirectory)/$(FSharpWrapOutputFileName)</FSharpWrapOutputFilePath>
    <_FSharpWrapLaunchDebugger Condition="'$(_FSharpWrapLaunchDebugger)'==''">false</_FSharpWrapLaunchDebugger>
    <_FSharpWrapToolPath Condition="'$(_FSharpWrapToolPath)'==''">$(MSBuildThisFileDirectory)/FSharpWrap.Tool.dll</_FSharpWrapToolPath>
  </PropertyGroup>

  <Target Name="FSharpWrap" Condition="'$(MSBuildProjectExtension)'=='.fsproj'" BeforeTargets="AfterResolveReferences;CoreCompile">
    <!-- TODO: How to check that 'dotnet' exists? -->
    <FSharpWrapFormatCliArguments
      ToolPath="$(_FSharpWrapToolPath)"
      AssemblyPaths="@(ReferencePath)"
      OutputFilePath="$(FSharpWrapOutputFilePath)"
      ExcludeAssemblyFiles="@(FSharpWrapExcludeFiles)"
      IncludeAssemblyFiles="@(FSharpWrapIncludeFiles)"
      LaunchDebugger="$(_FSharpWrapLaunchDebugger)">
      <Output TaskParameter="CliArguments" PropertyName="_FSharpWrapCliArguments" />
    </FSharpWrapFormatCliArguments>

    <Exec
      Command="dotnet exec $(_FSharpWrapCliArguments)"
      ConsoleToMsBuild="true"
      LogStandardErrorAsError="true" />
  </Target>

</Project>
