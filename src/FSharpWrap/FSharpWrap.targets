<Project>

  <UsingTask
    TaskName="FSharpWrapFormatCliArguments"
    TaskFactory="RoslynCodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <CliArguments ParameterType="System.String" Output="true" />
      <ToolPath ParameterType="System.String" Required="true" />

      <AssemblyPaths ParameterType="System.String[]" Required="true" />
      <OutputFilePath ParameterType="System.String" Required="true" />

      <!-- Filters -->
      <ExcludeAssemblyNames ParameterType="System.String[]" Required="true" />
      <IncludeAssemblyNames ParameterType="System.String[]" Required="true" />
      <ExcludeNamespaces ParameterType="System.String[]" Required="true" />
      <IncludeNamespaces ParameterType="System.String[]" Required="true" />

      <LaunchDebugger ParameterType="System.Boolean" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.Collections.Generic" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Linq" />
      <Code Type="Fragment" Language="C#">
        <![CDATA[
if (!File.Exists(ToolPath))
{
    Log.LogError($"Unable to locate FSharpWrap executable at {ToolPath}");
    return false;
}

var args = new List<string>(6);
args.Add(ToolPath);
args.AddRange(AssemblyPaths);
args.Add("--output-file");
args.Add(OutputFilePath);

if (ExcludeAssemblyNames.Length > 0)
{
    args.Add("--exclude-assembly-names");
    args.AddRange(ExcludeAssemblyNames);
}

if (IncludeAssemblyNames.Length > 0)
{
    args.Add("--include-assembly-names");
    args.AddRange(IncludeAssemblyNames);
}

if (ExcludeNamespaces.Length > 0)
{
    args.Add("--exclude-namespaces");
    args.AddRange(ExcludeNamespaces);
}

if (IncludeNamespaces.Length > 0)
{
    args.Add("--include-namespaces");
    args.AddRange(IncludeNamespaces);
}

if (LaunchDebugger) args.Add("--launch-debugger");

CliArguments = String.Join(" ", args.ConvertAll(arg => $"\"{arg}\""));
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <!-- FSharpWrap Settings -->
  <PropertyGroup>
    <FSharpWrapOutputFileName Condition="'$(FSharpWrapOutputFileName)'==''">output.autogen.fs</FSharpWrapOutputFileName>
    <FSharpWrapOutputFilePath Condition="'$(FSharpWrapOutputFilePath)'==''">$(MSBuildProjectDirectory)/$(FSharpWrapOutputFileName)</FSharpWrapOutputFilePath>
    <_FSharpWrapLaunchDebugger Condition="'$(_FSharpWrapLaunchDebugger)'==''">false</_FSharpWrapLaunchDebugger>
    <_FSharpWrapToolPath Condition="'$(_FSharpWrapToolPath)'==''">$(MSBuildThisFileDirectory)/FSharpWrap.Tool.dll</_FSharpWrapToolPath>
  </PropertyGroup>

  <Target Name="FSharpWrap" Condition="'$(MSBuildProjectExtension)'=='.fsproj'" BeforeTargets="AfterResolveReferences;CoreCompile">
    <MSBuild
      Projects="%(ProjectReference.Identity)"
      Targets="GetTargetPath"
      Properties="Configuration=$(Configuration)">
      <Output TaskParameter="TargetOutputs" ItemName="_FSharpWrapProjectReferences" />
    </MSBuild>

    <FSharpWrapFormatCliArguments
      ToolPath="$(_FSharpWrapToolPath)"
      AssemblyPaths="@(ReferencePath)"
      OutputFilePath="$(FSharpWrapOutputFilePath)"
      ExcludeAssemblyNames="@(FSharpWrapExcludeNames)"
      IncludeAssemblyNames="@(FSharpWrapIncludeNames)"
      ExcludeNamespaces="@(FSharpWrapExcludeNamespaces)"
      IncludeNamespaces="@(FSharpWrapIncludeNamespaces)"
      LaunchDebugger="$(_FSharpWrapLaunchDebugger)">
      <Output TaskParameter="CliArguments" PropertyName="_FSharpWrapCliArguments" />
    </FSharpWrapFormatCliArguments>

    <!-- TODO: How to check that 'dotnet' exists? -->
    <Exec
      Command="dotnet exec $(_FSharpWrapCliArguments)"
      ConsoleToMsBuild="true"
      LogStandardErrorAsError="true" />
  </Target>

</Project>
